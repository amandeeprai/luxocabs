.example-container {
  display: flex;
  flex-direction: column;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}
.mat-drawer{
  display: block !important;
}
.mat-sidenav{
  visibility: visible !important;
}
.example-is-mobile .example-toolbar {
  position: fixed;
  /* Make sure the toolbar will stay on top of the content as it scrolls past. */
  z-index: 2;
}
.mat-drawer.mat-drawer-side {
  background: #000 !important;
}
.mat-toolbar.mat-primary {
  background: #323232;
 
}
h1.example-app-name {
  margin-left: 8px;
}
.mat-list, .mat-selection-list, .mat-nav-list{
  min-width: 250px;
  background: #000 !important;
}
.mat-list, .mat-nav-list, .mat-selection-list{
 
  padding: 9px;
  padding-left: 30px !important;
  padding-right: 30px !important;
  display: block !important;
  
  border-bottom: .1px solid #9a9a9a;
  color: #fdffff !important;
  font-weight: 350 !important;
  font-size: 18px !important;
}
.togleButton{
  background: #323232;
  border: none;
  color: #fff;
  font-weight: 400;
  font-size: 36px;
 
}
#snav{
  display:block; 
}
@media (max-width: 740px) {
  .togleButton{
    display: block;
  }
}


.example-sidenav-container {
  /* When the sidenav is not fixed, stretch the sidenav container to fill the available space. This
     causes `<mat-sidenav-content>` to act as our scrolling element for desktop layouts. */
  flex: 1;
}

.example-is-mobile .example-sidenav-container {
  /* When the sidenav is fixed, don't constrain the height of the sidenav container. This allows the
     `<body>` to be our scrolling element for mobile layouts. */
  flex: 1 0 auto;
}
